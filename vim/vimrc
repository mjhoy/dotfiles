" vimrc
" -----
" Michael Hoy | mjh@mjhoy.com | 2012

" This option goes first because it may have side-effects.
set nocompatible

" Common-sense stuff
" ------------------

" Syntax highlightin
syntax enable

" Enable file type detection; autoload plugin and indent files.
filetype plugin indent on

" Line numbers.
set number

" Rule under the cursor.
set ruler

" Shows little command bits in the last line of the screen.
set showcmd

" Tell me what mode I'm in.
set showmode

" Allow backspacing over indents, line breaks, the start of insert.
set backspace=indent,eol,start

" Do not unload a buffer when hidden.
set hidden

" Enhanced mode for command-line completion.
set wildmenu

" Completion till the longest common string (like bash).
set wildmode=list:longest

" Case-insensitive searching.
set ignorecase

" Case-sensitive searching if expression contains a capital letter.
set smartcase

" Highlight matches as you type.
set incsearch

" Highlight matches.
set hlsearch

" No line wrapping.
set nowrap

" Minimum 3 lines kept above/below cursor.
set scrolloff=3

" Title of window set to value of the filename or 'titlestring'.
set title

" No beep.
set visualbell

" Do not make a backup before overwriting.
set nobackup

" Again?
set nowritebackup

" Use <F2> to turn off indenting for pasting.
set pastetoggle=<F2>

" 2 spaces for tabs.
set tabstop=2
set shiftwidth=2
set expandtab

" no coffeescript trailing space error indication
let coffee_no_trailing_space_error = 1
let hs_highlight_delimiters = 1
let ruby_no_expensive = 1

" Use magic
set magic

" Show the status line all the time
set laststatus=2

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %=%-16(\ %l,%c-%v\ %)%P

" Use 256 colors.
set t_Co=256

" Highlight trailing whitespace
" See: http://vim.wikia.com/wiki/Highlight_unwanted_spaces
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+\%#\@<!$/

" Use comma for leader.
let mapleader=","

" Map ,e and ,v to open files in the same directory as the current file
" From Gary Bernhardt's vimrc
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

" <C-L> to clear search
if exists(":nohls")
  nnoremap <silent> <C-L> :nohls<CR><C-L>
endif

" Autocommands
augroup vimrcEx
  " Remove ALL autocommands for the current group
  autocmd!

  " Jump to the last known position in a file just after opening it.
  " See :help last-position-jump
  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

  " Gemfiles are ruby files
  autocmd BufRead,BufNewFile Gemfile set filetype=ruby
augroup END

function! RenameFile()
    let old_name = expand('%')
    let new_name = input('New file name: ', expand('%'), 'file')
    if new_name != '' && new_name != old_name
        exec ':saveas ' . new_name
        exec ':silent !rm ' . old_name
        redraw!
    endif
endfunction
map <leader>n :call RenameFile()<cr>
